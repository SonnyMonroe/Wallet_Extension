{"ast":null,"code":"var _jsxFileName = \"/home/sonnymonroe/mabra/moralis/moralis-blueprints/Wallet_Extension/Final/mwallet/src/components/WalletView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Divider, Tooltip, List, Avatar, Spin, Tabs, Input, Button } from \"antd\";\nimport { LogoutOutlined } from \"@ant-design/icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport logo from \"../noImg.png\";\nimport axios from \"axios\";\nimport { CHAINS_CONFIG } from \"../chains\";\nimport { ethers } from \"ethers\";\nimport Moralis from \"moralis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function getAccountTokens(userAddress, chain) {\n  const options = {\n    chain\n  };\n  const tokens = await Moralis.Web3API.token.getAllTokenBalances(options);\n  return tokens.filter(token => token.balance > 0);\n}\nfunction WalletView(_ref) {\n  _s();\n  let {\n    wallet,\n    setWallet,\n    seedPhrase,\n    setSeedPhrase,\n    selectedChain\n  } = _ref;\n  const navigate = useNavigate();\n  const [tokens, setTokens] = useState(null);\n  const [nfts, setNfts] = useState(null);\n  const [balance, setBalance] = useState(0);\n  const [fetching, setFetching] = useState(true);\n  const [amountToSend, setAmountToSend] = useState(null);\n  const [sendToAddress, setSendToAddress] = useState(null);\n  const [processing, setProcessing] = useState(false);\n  const [hash, setHash] = useState(null);\n  const items = [{\n    key: \"3\",\n    label: `Tokens`,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: tokens ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          bordered: true,\n          itemLayout: \"horizontal\",\n          dataSource: tokens,\n          renderItem: (item, index) => /*#__PURE__*/_jsxDEV(List.Item, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                src: item.logo || logo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 31\n              }, this),\n              title: item.symbol,\n              description: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [(Number(item.balance) / 10 ** Number(item.decimals)).toFixed(2), \" \", \"Tokens\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"You seem to not have any tokens yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"frontPageBottom\",\n          children: [\"Find Alt Coin Gems:\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://moralismoney.com/\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"money.moralis.io\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false)\n  }, {\n    key: \"2\",\n    label: `NFTs`,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: nfts ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: nfts.map((e, i) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: e && /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"nftImage\",\n              alt: \"nftImage\",\n              src: e\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 23\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"You seem to not have any NFTs yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"frontPageBottom\",\n          children: [\"Find Alt Coin Gems:\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://moralismoney.com/\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"money.moralis.io\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false)\n  }, {\n    key: \"1\",\n    label: `Transfer`,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Native Balance \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [balance.toFixed(2), \" \", CHAINS_CONFIG[selectedChain].ticker]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sendRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            width: \"90px\",\n            textAlign: \"left\"\n          },\n          children: \" To:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: sendToAddress,\n          onChange: e => setSendToAddress(e.target.value),\n          placeholder: \"0x...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sendRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            width: \"90px\",\n            textAlign: \"left\"\n          },\n          children: \" Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: amountToSend,\n          onChange: e => setAmountToSend(e.target.value),\n          placeholder: \"Native tokens you wish to send...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          width: \"100%\",\n          marginTop: \"20px\",\n          marginBottom: \"20px\"\n        },\n        type: \"primary\",\n        onClick: () => sendTransaction(sendToAddress, amountToSend),\n        children: \"Send Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), processing && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this), hash && /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: hash,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Hover For Tx Hash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)\n  }];\n  async function sendTransaction(to, amount) {\n    const chain = CHAINS_CONFIG[selectedChain];\n    const provider = new ethers.JsonRpcProvider(chain.rpcUrl);\n    const privateKey = ethers.Wallet.fromPhrase(seedPhrase).privateKey;\n    const wallet = new ethers.Wallet(privateKey, provider);\n    const tx = {\n      to: to,\n      value: ethers.parseEther(amount.toString())\n    };\n    setProcessing(true);\n    try {\n      const transaction = await wallet.sendTransaction(tx);\n      setHash(transaction.hash);\n      const receipt = await transaction.wait();\n      setHash(null);\n      setProcessing(false);\n      setAmountToSend(null);\n      setSendToAddress(null);\n      if (receipt.status === 1) {\n        getAccountTokens();\n      } else {\n        console.log(\"failed\");\n      }\n    } catch (err) {\n      setHash(null);\n      setProcessing(false);\n      setAmountToSend(null);\n      setSendToAddress(null);\n    }\n  }\n  async function getAccountTokens() {\n    setFetching(true);\n    const res = await axios.get(`http://localhost:3001/getTokens`, {\n      params: {\n        userAddress: wallet,\n        chain: selectedChain\n      }\n    });\n    const response = res.data;\n    if (response.tokens.length > 0) {\n      setTokens(response.tokens);\n    }\n    if (response.nfts.length > 0) {\n      setNfts(response.nfts);\n    }\n    setBalance(response.balance);\n    setFetching(false);\n  }\n  function logout() {\n    setSeedPhrase(null);\n    setWallet(null);\n    setNfts(null);\n    setTokens(null);\n    setBalance(0);\n    navigate(\"/\");\n  }\n  useEffect(() => {\n    if (!wallet || !selectedChain) return;\n    setNfts(null);\n    setTokens(null);\n    setBalance(0);\n    getAccountTokens();\n  }, []);\n  useEffect(() => {\n    if (!wallet) return;\n    setNfts(null);\n    setTokens(null);\n    setBalance(0);\n    getAccountTokens();\n  }, [selectedChain]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logoutButton\",\n        onClick: logout,\n        children: /*#__PURE__*/_jsxDEV(LogoutOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"walletName\",\n        children: \"Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: wallet,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [wallet.slice(0, 4), \"...\", wallet.slice(38)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), fetching ? /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Tabs, {\n        defaultActiveKey: \"1\",\n        items: items,\n        className: \"walletView\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(WalletView, \"Q9F3HPcl6izF4CcqDJDstHw/cks=\", false, function () {\n  return [useNavigate];\n});\n_c = WalletView;\nexport default WalletView;\nvar _c;\n$RefreshReg$(_c, \"WalletView\");","map":{"version":3,"names":["React","useEffect","useState","Divider","Tooltip","List","Avatar","Spin","Tabs","Input","Button","LogoutOutlined","useNavigate","logo","axios","CHAINS_CONFIG","ethers","Moralis","jsxDEV","_jsxDEV","Fragment","_Fragment","getAccountTokens","userAddress","chain","options","tokens","Web3API","token","getAllTokenBalances","filter","balance","WalletView","_ref","_s","wallet","setWallet","seedPhrase","setSeedPhrase","selectedChain","navigate","setTokens","nfts","setNfts","setBalance","fetching","setFetching","amountToSend","setAmountToSend","sendToAddress","setSendToAddress","processing","setProcessing","hash","setHash","items","key","label","children","bordered","itemLayout","dataSource","renderItem","item","index","Item","style","textAlign","Meta","avatar","src","fileName","_jsxFileName","lineNumber","columnNumber","title","symbol","description","name","Number","decimals","toFixed","className","href","target","rel","map","e","i","alt","ticker","width","value","onChange","placeholder","marginTop","marginBottom","type","onClick","sendTransaction","to","amount","provider","JsonRpcProvider","rpcUrl","privateKey","Wallet","fromPhrase","tx","parseEther","toString","transaction","receipt","wait","status","console","log","err","res","get","params","response","data","length","logout","slice","defaultActiveKey","_c","$RefreshReg$"],"sources":["/home/sonnymonroe/mabra/moralis/moralis-blueprints/Wallet_Extension/Final/mwallet/src/components/WalletView.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Divider,\r\n  Tooltip,\r\n  List,\r\n  Avatar,\r\n  Spin,\r\n  Tabs,\r\n  Input,\r\n  Button,\r\n} from \"antd\";\r\nimport { LogoutOutlined } from \"@ant-design/icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport logo from \"../noImg.png\";\r\nimport axios from \"axios\";\r\nimport { CHAINS_CONFIG } from \"../chains\";\r\nimport { ethers } from \"ethers\";\r\nimport Moralis from \"moralis\";\r\n\r\nasync function getAccountTokens(userAddress, chain) {\r\n  const options = { chain };\r\n  const tokens = await Moralis.Web3API.token.getAllTokenBalances(options);\r\n\r\n  return tokens.filter((token) => token.balance > 0);\r\n}\r\nfunction WalletView({\r\n  wallet,\r\n  setWallet,\r\n  seedPhrase,\r\n  setSeedPhrase,\r\n  selectedChain,\r\n}) {\r\n  const navigate = useNavigate();\r\n  const [tokens, setTokens] = useState(null);\r\n  const [nfts, setNfts] = useState(null);\r\n  const [balance, setBalance] = useState(0);\r\n  const [fetching, setFetching] = useState(true);\r\n  const [amountToSend, setAmountToSend] = useState(null);\r\n  const [sendToAddress, setSendToAddress] = useState(null);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [hash, setHash] = useState(null);\r\n\r\n  const items = [\r\n    {\r\n      key: \"3\",\r\n      label: `Tokens`,\r\n      children: (\r\n        <>\r\n          {tokens ? (\r\n            <>\r\n              <List\r\n                bordered\r\n                itemLayout=\"horizontal\"\r\n                dataSource={tokens}\r\n                renderItem={(item, index) => (\r\n                  <List.Item style={{ textAlign: \"left\" }}>\r\n                    <List.Item.Meta\r\n                      avatar={<Avatar src={item.logo || logo} />}\r\n                      title={item.symbol}\r\n                      description={item.name}\r\n                    />\r\n                    <div>\r\n                      {(\r\n                        Number(item.balance) /\r\n                        10 ** Number(item.decimals)\r\n                      ).toFixed(2)}{\" \"}\r\n                      Tokens\r\n                    </div>\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span>You seem to not have any tokens yet</span>\r\n              <p className=\"frontPageBottom\">\r\n                Find Alt Coin Gems:{\" \"}\r\n                <a\r\n                  href=\"https://moralismoney.com/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  money.moralis.io\r\n                </a>\r\n              </p>\r\n            </>\r\n          )}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      key: \"2\",\r\n      label: `NFTs`,\r\n      children: (\r\n        <>\r\n          {nfts ? (\r\n            <>\r\n              {nfts.map((e, i) => {\r\n                return (\r\n                  <>\r\n                    {e && (\r\n                      <img\r\n                        key={i}\r\n                        className=\"nftImage\"\r\n                        alt=\"nftImage\"\r\n                        src={e}\r\n                      />\r\n                    )}\r\n                  </>\r\n                );\r\n              })}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span>You seem to not have any NFTs yet</span>\r\n              <p className=\"frontPageBottom\">\r\n                Find Alt Coin Gems:{\" \"}\r\n                <a\r\n                  href=\"https://moralismoney.com/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  money.moralis.io\r\n                </a>\r\n              </p>\r\n            </>\r\n          )}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      key: \"1\",\r\n      label: `Transfer`,\r\n      children: (\r\n        <>\r\n          <h3>Native Balance </h3>\r\n          <h1>\r\n            {balance.toFixed(2)} {CHAINS_CONFIG[selectedChain].ticker}\r\n          </h1>\r\n          <div className=\"sendRow\">\r\n            <p style={{ width: \"90px\", textAlign: \"left\" }}> To:</p>\r\n            <Input\r\n              value={sendToAddress}\r\n              onChange={(e) => setSendToAddress(e.target.value)}\r\n              placeholder=\"0x...\"\r\n            />\r\n          </div>\r\n          <div className=\"sendRow\">\r\n            <p style={{ width: \"90px\", textAlign: \"left\" }}> Amount:</p>\r\n            <Input\r\n              value={amountToSend}\r\n              onChange={(e) => setAmountToSend(e.target.value)}\r\n              placeholder=\"Native tokens you wish to send...\"\r\n            />\r\n          </div>\r\n          <Button\r\n            style={{ width: \"100%\", marginTop: \"20px\", marginBottom: \"20px\" }}\r\n            type=\"primary\"\r\n            onClick={() => sendTransaction(sendToAddress, amountToSend)}\r\n          >\r\n            Send Tokens\r\n          </Button>\r\n          {processing && (\r\n            <>\r\n              <Spin />\r\n              {hash && (\r\n                <Tooltip title={hash}>\r\n                  <p>Hover For Tx Hash</p>\r\n                </Tooltip>\r\n              )}\r\n            </>\r\n          )}\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  async function sendTransaction(to, amount) {\r\n    const chain = CHAINS_CONFIG[selectedChain];\r\n\r\n    const provider = new ethers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n    const privateKey = ethers.Wallet.fromPhrase(seedPhrase).privateKey;\r\n\r\n    const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n    const tx = {\r\n      to: to,\r\n      value: ethers.parseEther(amount.toString()),\r\n    };\r\n\r\n    setProcessing(true);\r\n    try {\r\n      const transaction = await wallet.sendTransaction(tx);\r\n\r\n      setHash(transaction.hash);\r\n      const receipt = await transaction.wait();\r\n\r\n      setHash(null);\r\n      setProcessing(false);\r\n      setAmountToSend(null);\r\n      setSendToAddress(null);\r\n\r\n      if (receipt.status === 1) {\r\n        getAccountTokens();\r\n      } else {\r\n        console.log(\"failed\");\r\n      }\r\n    } catch (err) {\r\n      setHash(null);\r\n      setProcessing(false);\r\n      setAmountToSend(null);\r\n      setSendToAddress(null);\r\n    }\r\n  }\r\n\r\n  async function getAccountTokens() {\r\n    setFetching(true);\r\n\r\n    const res = await axios.get(`http://localhost:3001/getTokens`, {\r\n      params: {\r\n        userAddress: wallet,\r\n        chain: selectedChain,\r\n      },\r\n    });\r\n\r\n    const response = res.data;\r\n\r\n    if (response.tokens.length > 0) {\r\n      setTokens(response.tokens);\r\n    }\r\n\r\n    if (response.nfts.length > 0) {\r\n      setNfts(response.nfts);\r\n    }\r\n\r\n    setBalance(response.balance);\r\n\r\n    setFetching(false);\r\n  }\r\n\r\n  function logout() {\r\n    setSeedPhrase(null);\r\n    setWallet(null);\r\n    setNfts(null);\r\n    setTokens(null);\r\n    setBalance(0);\r\n    navigate(\"/\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!wallet || !selectedChain) return;\r\n    setNfts(null);\r\n    setTokens(null);\r\n    setBalance(0);\r\n    getAccountTokens();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!wallet) return;\r\n    setNfts(null);\r\n    setTokens(null);\r\n    setBalance(0);\r\n    getAccountTokens();\r\n  }, [selectedChain]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <div className=\"logoutButton\" onClick={logout}>\r\n          <LogoutOutlined />\r\n        </div>\r\n        <div className=\"walletName\">Wallet</div>\r\n        <Tooltip title={wallet}>\r\n          <div>\r\n            {wallet.slice(0, 4)}...{wallet.slice(38)}\r\n          </div>\r\n        </Tooltip>\r\n        <Divider />\r\n        {fetching ? (\r\n          <Spin />\r\n        ) : (\r\n          <Tabs defaultActiveKey=\"1\" items={items} className=\"walletView\" />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WalletView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}